/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;
import DAO.*;
import java.util.ArrayList;
import java.awt.BorderLayout;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JPanel;
import java.awt.BorderLayout;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.time.Day;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.ui.RefineryUtilities;
/**
 *
 * @author enric
 */
public class Relatorio extends javax.swing.JFrame {

    /**
     * Creates new form Relatorio
     */
    public Relatorio() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        IDFrentista = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        DataMinima = new javax.swing.JTextField();
        DataMaxima = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Venda pelo ID do frentista: ");

        jLabel2.setText("Data Minima | Data Maxima: (yyyy-mm-dd)");

        jButton1.setText("Relatorio por ID Frentista");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Relatorio por Data");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Relatorio por Data e ID");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Voltar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Relatorio em Reais (Data)");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DataMinima, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(DataMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)
                            .addComponent(IDFrentista, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 135, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(IDFrentista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DataMinima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DataMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    RelatorioDAO rel = new RelatorioDAO();
    int idFrentista = Integer.parseInt(IDFrentista.getText());
    rel.TotalDoFrentista(idFrentista);
    ArrayList<VendaRelatorio> relVenda = new ArrayList<VendaRelatorio>();
    ArrayList<VendaRelatorio> relVendaGas = new ArrayList<>();
    ArrayList<VendaRelatorio> relVendaEtanol = new ArrayList<>();
    relVenda = rel.relatorioVenda(idFrentista);
    DefaultCategoryDataset dataset = new DefaultCategoryDataset();
    for(VendaRelatorio venda: relVenda){
        if(venda.getIDCombustivel() == 1){
            relVendaEtanol.add(venda);
        } else{
            relVendaGas.add(venda);
        }
    }
    try{

        for(VendaRelatorio venda : relVendaEtanol){
            dataset.addValue(venda.getQuantidade(), "Etanol", new Day(parseStringToDate(venda.getData())));
        }
        for(VendaRelatorio venda : relVendaGas) {
            dataset.addValue(venda.getQuantidade(), "Gasolina",new Day(parseStringToDate(venda.getData())));
        }
    } catch(ParseException e){
        System.out.println(e);
    }
    JFreeChart chart = ChartFactory.createBarChart("Gr√°ficos de Venda", "Data", "Quantidade", dataset, PlotOrientation.VERTICAL, true, true, false);
    ChartPanel chartPanel = new ChartPanel(chart);
    JPanel panel = new JPanel(new BorderLayout());
    panel.add(chartPanel, BorderLayout.CENTER);
    JOptionPane.showMessageDialog(null,panel, "Grafico de Vendas - Por Frentista", JOptionPane.PLAIN_MESSAGE);
    
    
    /**
    String string = "";
    String Combustivel;
    float totalDeVendas = 0;
    for(VendaRelatorio venda : relVenda){
        if(venda.getIDCombustivel() == 1){
            Combustivel = "Etanol";
        } else {
            Combustivel = "Gasolina";
        }
    totalDeVendas += venda.getQuantidade();
    string += "Venda de "+ Combustivel +" com quantidade de " + venda.getQuantidade()+" Na data "+ venda.getData()+"\n";
    }
    string += "Com um total de "+ totalDeVendas + " De combustivel vendido";
    **/
    IDFrentista.setText("");
    DataMinima.setText("");
    DataMaxima.setText("");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    RelatorioDAO rel = new RelatorioDAO();
    ArrayList<VendaRelatorio> relVenda = new ArrayList<VendaRelatorio>();
    ArrayList<VendaRelatorio> relVendaGas = new ArrayList<>();
    ArrayList<VendaRelatorio> relVendaEtanol = new ArrayList<>();
    relVenda = rel.relatorioData(DataMinima.getText(), DataMaxima.getText());
    DefaultCategoryDataset dataset = new DefaultCategoryDataset();
    for(VendaRelatorio venda: relVenda){
        if(venda.getIDCombustivel() == 1){
            relVendaEtanol.add(venda);
        } else{
            relVendaGas.add(venda);
        }
    }
    try{
        for(VendaRelatorio venda : relVendaEtanol){
            dataset.addValue(venda.getQuantidade(), "Etanol", new Day(parseStringToDate(venda.getData())));
        }
        for(VendaRelatorio venda : relVendaGas) {
            dataset.addValue(venda.getQuantidade(), "Gasolina", new Day(parseStringToDate(venda.getData())));
        }
    } catch (ParseException e){
        System.out.println(e);
    }
    JFreeChart chart = ChartFactory.createBarChart("Gr√°ficos de Venda", "Data", "Quantidade", dataset, PlotOrientation.VERTICAL, true, true, false);
    ChartPanel chartPanel = new ChartPanel(chart);
    JPanel panel = new JPanel(new BorderLayout());
    panel.add(chartPanel, BorderLayout.CENTER);
    JOptionPane.showMessageDialog(null,panel, "Grafico de Vendas - Por Data", JOptionPane.PLAIN_MESSAGE);
    /**
    String string = "";
    float totalDeVendas = 0;
    String Combustivel;
    for(VendaRelatorio venda: relVenda){
        if(venda.getIDCombustivel() == 1){
            Combustivel = "Etanol";
        } else {
            Combustivel = "Gasolina";
        }
        string += "Venda de "+ Combustivel + " com quantidade "+ venda.getQuantidade()+ " na data "+ venda.getData()+"\n";
        totalDeVendas += venda.getQuantidade();
    }
    string += "Com um total de "+ totalDeVendas + " De combustivel vendido";
    **/
    IDFrentista.setText("");
    DataMinima.setText("");
    DataMaxima.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    RelatorioDAO rel = new RelatorioDAO();
    String Combustivel;
    float totalDeVendas = 0;
    String string = "";
    int idFrentista = Integer.parseInt(IDFrentista.getText());
    ArrayList<VendaRelatorio> relVenda = new ArrayList<>();
    ArrayList<VendaRelatorio> relVendaGas = new ArrayList<>();
    ArrayList<VendaRelatorio> relVendaEtanol = new ArrayList<>();
    relVenda = rel.relatorioVendaData(idFrentista, DataMinima.getText(), DataMaxima.getText());
    DefaultCategoryDataset dataset = new DefaultCategoryDataset();
    for(VendaRelatorio venda: relVenda){
        if(venda.getIDCombustivel() == 1){
            relVendaEtanol.add(venda);
        } else{
            relVendaGas.add(venda);
        }
    }
    try{
        for(VendaRelatorio venda : relVendaEtanol){
            dataset.addValue(venda.getQuantidade(), "Etanol", new Day(parseStringToDate(venda.getData())));
        }
        for(VendaRelatorio venda : relVendaGas) {
            dataset.addValue(venda.getQuantidade(), "Gasolina", new Day(parseStringToDate(venda.getData())));
        }
    }catch (ParseException e) {
           System.out.println(e);
        }
    JFreeChart chart = ChartFactory.createBarChart("Gr√°ficos de Venda", "Data", "Quantidade", dataset, PlotOrientation.VERTICAL, true, true, false);
    ChartPanel chartPanel = new ChartPanel(chart);
    JPanel panel = new JPanel(new BorderLayout());
    panel.add(chartPanel, BorderLayout.CENTER);
    JOptionPane.showMessageDialog(null,panel, "Grafico de Vendas - Por Data e Frentista", JOptionPane.PLAIN_MESSAGE);
    
    /**
    DefaultCategoryDataset dataset = new DefaultCategoryDataset();
    for (VendaRelatorio venda : relVenda){
        String data = venda.getData();
        float quantidade = venda.getQuantidade();
        int idCombustivel = venda.getIDCombustivel();
        dataset.addValue(quantidade,"Vendas",data +" ID: "+ idCombustivel+ ")");
    }
    JFreeChart chart = ChartFactory.createLineChart("Gr√°fico de Vendas","Data (ID COmbustivel)", "Quantidade", dataset);
    **/
    /**
        for(VendaRelatorio venda: relVenda){
        if(venda.getIDCombustivel() == 1){
            Combustivel = "Etanol";
        } else {
            Combustivel = "Gasolina";
        }
        string += "Venda de "+ Combustivel + " com quantidade "+ venda.getQuantidade()+ " na data "+ venda.getData()+"\n";
        totalDeVendas += venda.getQuantidade();
    }
    string += "Com um total de "+ totalDeVendas + " De combustivel vendido";
    * **/

    IDFrentista.setText("");
    DataMinima.setText("");
    DataMaxima.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    TelaInicial telaInicial = new TelaInicial();
    telaInicial.setVisible(true);
    this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed
    private static Date parseStringToDate(String dateString) throws ParseException {
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        java.util.Date utilDate = format.parse(dateString);
        return new Date(utilDate.getTime());
    }
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        RelatorioDAO rel = new RelatorioDAO();
        ArrayList<VendaRelatorio> relVenda = new ArrayList<>();
        relVenda = rel.relatorioData(DataMinima.getText(), DataMaxima.getText());
        TimeSeriesCollection dataset = new TimeSeriesCollection();
        TimeSeries series = new TimeSeries("Valores");
        try{
            for(VendaRelatorio venda : relVenda){
                series.addOrUpdate(new Day(parseStringToDate(venda.getData())), venda.getValor());
            }
            dataset.addSeries(series);
        } catch(ParseException e){
            System.out.println(e);
        }
        JFreeChart chart = ChartFactory.createTimeSeriesChart("Grafico Venda - Valor", "Data", "Valor", dataset, true, true, false);
        ChartFrame frame = new ChartFrame("Grafico", chart);
        frame.pack();
        RefineryUtilities.centerFrameOnScreen(frame);
        frame.setVisible(true);
        DataMinima.setText("");
        DataMaxima.setText("");

 
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Relatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Relatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Relatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Relatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Relatorio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DataMaxima;
    private javax.swing.JTextField DataMinima;
    private javax.swing.JTextField IDFrentista;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
